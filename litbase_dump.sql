--
-- PostgreSQL database dump
--

-- Dumped from database version 16.4 (Ubuntu 16.4-0ubuntu0.24.04.2)
-- Dumped by pg_dump version 16.4 (Ubuntu 16.4-0ubuntu0.24.04.2)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: Diplom; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA "Diplom";


ALTER SCHEMA "Diplom" OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: attributetype; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".attributetype (
    "userId" integer NOT NULL,
    id integer NOT NULL,
    name text NOT NULL,
    is_complex boolean NOT NULL,
    type integer NOT NULL,
    validation text NOT NULL
);


ALTER TABLE "Diplom".attributetype OWNER TO postgres;

--
-- Name: favoriteobj; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".favoriteobj (
    "UserId" integer NOT NULL,
    "ObjId" integer NOT NULL
);


ALTER TABLE "Diplom".favoriteobj OWNER TO postgres;

--
-- Name: linkobj; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".linkobj (
    "ObjParentId" integer NOT NULL,
    "userId" integer NOT NULL,
    "ObjChildId" integer NOT NULL
);


ALTER TABLE "Diplom".linkobj OWNER TO postgres;

--
-- Name: menuelement; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".menuelement (
    "userId" integer NOT NULL,
    id integer NOT NULL,
    name text NOT NULL,
    description text,
    "parentMenuId" integer,
    "objTypeId" integer,
    filters text NOT NULL
);


ALTER TABLE "Diplom".menuelement OWNER TO postgres;

--
-- Name: obj; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".obj (
    "userId" integer NOT NULL,
    id integer NOT NULL,
    name text NOT NULL,
    "TypeId" integer NOT NULL,
    "stateId" integer NOT NULL
);


ALTER TABLE "Diplom".obj OWNER TO postgres;

--
-- Name: objadditionalattribute; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".objadditionalattribute (
    id integer NOT NULL,
    "userId" integer NOT NULL,
    "ObjId" integer NOT NULL,
    number integer NOT NULL,
    name text NOT NULL,
    value text NOT NULL,
    "AttributeTypeId" integer NOT NULL
);


ALTER TABLE "Diplom".objadditionalattribute OWNER TO postgres;

--
-- Name: objattribute; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".objattribute (
    id integer NOT NULL,
    "userId" integer NOT NULL,
    "ObjId" integer NOT NULL,
    number integer NOT NULL,
    value text NOT NULL
);


ALTER TABLE "Diplom".objattribute OWNER TO postgres;

--
-- Name: objstate; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".objstate (
    "userId" integer NOT NULL,
    id integer NOT NULL,
    code text NOT NULL,
    name text NOT NULL,
    description text
);


ALTER TABLE "Diplom".objstate OWNER TO postgres;

--
-- Name: objtype; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".objtype (
    "userId" integer NOT NULL,
    id integer NOT NULL,
    name text NOT NULL,
    code text NOT NULL,
    description text
);


ALTER TABLE "Diplom".objtype OWNER TO postgres;

--
-- Name: objtypeattribute; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom".objtypeattribute (
    id integer NOT NULL,
    "userId" integer NOT NULL,
    "TypeId" integer NOT NULL,
    number integer NOT NULL,
    name text NOT NULL,
    "AttributeTypeId" integer NOT NULL
);


ALTER TABLE "Diplom".objtypeattribute OWNER TO postgres;

--
-- Name: user; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom"."user" (
    id integer NOT NULL,
    name text NOT NULL,
    email text NOT NULL,
    password text NOT NULL,
    description text NOT NULL,
    title text NOT NULL,
    role text NOT NULL,
    icon text NOT NULL,
    lastauth timestamp with time zone NOT NULL,
    project text NOT NULL
);


ALTER TABLE "Diplom"."user" OWNER TO postgres;

--
-- Name: userSettings; Type: TABLE; Schema: Diplom; Owner: postgres
--

CREATE TABLE "Diplom"."userSettings" (
    "userId" integer NOT NULL,
    code text NOT NULL,
    "Value" text NOT NULL
);


ALTER TABLE "Diplom"."userSettings" OWNER TO postgres;

--
-- Name: user_id_seq; Type: SEQUENCE; Schema: Diplom; Owner: postgres
--

ALTER TABLE "Diplom"."user" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "Diplom".user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: attributetype; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".attributetype ("userId", id, name, is_complex, type, validation) FROM stdin;
1	1	Текст	f	0	
1	2	Число	f	1	
1	3	Дата	f	2	
1	4	Объект персонаж	t	1	
1	5	Объект	t	0	
2	1	Текст	f	0	
2	2	Число	f	1	
2	3	Дата	f	2	
2	4	Объект персонаж	t	1	
2	5	Объект	t	0	
3	1	Текст	f	0	
3	2	Число	f	1	
3	3	Дата	f	2	
3	4	Объект персонаж	t	1	
3	5	Объект	t	0	
4	1	Текст	f	0	
4	2	Число	f	1	
4	3	Дата	f	2	
4	4	Объект персонаж	t	1	
4	5	Объект	t	0	
5	1	Текст	f	0	
5	2	Число	f	1	
5	3	Дата	f	2	
5	4	Объект персонаж	t	1	
5	5	Объект	t	0	
6	1	Текст	f	0	
6	2	Число	f	1	
6	3	Дата	f	2	
6	4	Объект персонаж	t	1	
6	5	Объект	t	0	
7	1	Текст	f	0	
7	2	Число	f	1	
7	3	Дата	f	2	
7	4	Объект персонаж	t	1	
7	0	Объект локация	t	2	.+
7	6	Объект ссылка	t	0	.+
7	5	Объект Заклинание	t	4	
8	1	Текст	f	0	
8	2	Число	f	1	
8	3	Дата	f	2	
8	4	Объект персонаж	t	1	
8	5	Объект	t	0	
8	6	Заклинание	t	4	.+
9	1	Текст	f	0	
9	2	Число	f	1	
9	3	Дата	f	2	
9	4	Объект персонаж	t	1	
9	5	Объект	t	0	
9	6	Объект локация	t	2	
10	1	Текст	f	0	
10	2	Число	f	1	
10	3	Дата	f	2	
10	4	Объект персонаж	t	1	
10	5	Объект	t	0	
11	1	Текст	f	0	
11	2	Число	f	1	
11	3	Дата	f	2	
11	4	Любой объект	t	0	
11	5	Объект Персонаж	t	1	
11	6	Объект Локация	t	2	
11	7	Объект Событие	t	3	
12	1	Текст	f	0	
12	2	Число	f	1	
12	3	Дата	f	2	
12	4	Любой объект	t	0	
12	5	Объект Персонаж	t	1	
12	6	Объект Локация	t	2	
12	7	Объект Событие	t	3	
13	1	Текст	f	0	
13	2	Число	f	1	
13	3	Дата	f	2	
13	4	Любой объект	t	0	
13	5	Объект Персонаж	t	1	
13	6	Объект Локация	t	2	
13	7	Объект Событие	t	3	
14	1	Текст	f	0	
14	2	Число	f	1	
14	3	Дата	f	2	
14	4	Любой объект	t	0	
14	5	Объект Персонаж	t	1	
14	6	Объект Локация	t	2	
14	7	Объект Событие	t	3	
\.


--
-- Data for Name: favoriteobj; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".favoriteobj ("UserId", "ObjId") FROM stdin;
\.


--
-- Data for Name: linkobj; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".linkobj ("ObjParentId", "userId", "ObjChildId") FROM stdin;
\.


--
-- Data for Name: menuelement; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".menuelement ("userId", id, name, description, "parentMenuId", "objTypeId", filters) FROM stdin;
1	1	Персонажи	Персонажи	\N	1	
1	2	Локации	Локации	\N	2	
1	3	События	События	\N	3	
2	1	Персонажи	Персонажи	\N	1	
2	2	Локации	Локации	\N	2	
2	3	События	События	\N	3	
3	1	Персонажи	Персонажи	\N	1	
3	2	Локации	Локации	\N	2	
3	3	События	События	\N	3	
4	1	Персонажи	Персонажи	\N	1	
4	2	Локации	Локации	\N	2	
4	3	События	События	\N	3	
5	1	Персонажи	Персонажи	\N	1	
5	2	Локации	Локации	\N	2	
5	3	События	События	\N	3	
6	1	Персонажи	Персонажи	\N	1	
6	2	Локации	Локации	\N	2	
6	3	События	События	\N	3	
7	1	Персонажи	Персонажи	\N	1	
7	2	Локации	Локации	\N	2	
7	3	События	События	\N	3	
7	4	Заклинание	Заклинание	\N	4	
8	1	Персонажи	Персонажи	\N	1	
8	2	Локации	Локации	\N	2	
8	3	События	События	\N	3	
8	4	Заклинание	Заклинание	\N	4	
8	5	Гримуар	Гримуар	\N	5	
9	1	Персонажи	Персонажи	\N	1	
9	2	Локации	Локации	\N	2	
9	3	События	События	\N	3	
10	1	Персонажи	Персонажи	\N	1	
10	2	Локации	Локации	\N	2	
10	3	События	События	\N	3	
11	1	Персонажи	Персонажи	\N	1	
11	2	Локации	Локации	\N	2	
11	3	События	События	\N	3	
12	1	Персонажи	Персонажи	\N	1	
12	2	Локации	Локации	\N	2	
12	3	События	События	\N	3	
13	1	Персонажи	Персонажи	\N	1	
13	2	Локации	Локации	\N	2	
13	3	События	События	\N	3	
14	1	Персонажи	Персонажи	\N	1	
14	2	Локации	Локации	\N	2	
14	3	События	События	\N	3	
\.


--
-- Data for Name: obj; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".obj ("userId", id, name, "TypeId", "stateId") FROM stdin;
1	1	Пример персонажа	1	1
1	2	Пример локации	2	1
1	3	Пример события	3	1
2	1	Пример персонажа	1	1
2	2	Пример локации	2	1
2	3	Пример события	3	1
3	1	Пример персонажа	1	1
3	2	Пример локации	2	1
3	3	Пример события	3	1
3	4	Смерть	3	1
3	5	Поле. Странное поле.ворапщшцуропшзрмоыукзшрпмзышукрпмзшырукзшпмрызшурпзшыурпзшукровзшпрызшукрпмзшыркузшпмрызкрпзшыкурпзшырузшпмарызшкрпмзшыкризшвозроипхкщропихырокщхпимроызхшщкрпизхм!!!!!!!!!!	2	1
3	6	марка	1	1
3	8	ааа111	1	1
3	9	Моргот	1	1
3	7	Шибзик Непонятный объект, мелкий, но сильный. Бла бла бла и так далее. Живет в море, любит лес. СПать ............есть ..............................снова спатьююююююююююююююю	1	1
4	1	Пример персонажа	1	1
4	2	Пример локации	2	1
4	3	Пример события	3	1
5	1	Пример персонажа	1	1
5	2	Пример локации	2	1
5	3	Пример события	3	1
5	4	Главный герой	1	1
5	5	Антогонист	1	1
1	4	Главный герой	1	1
1	5	Антогонист	1	1
5	6	Новый объект	1	1
6	2	Пример локации	2	1
6	3	Пример события	3	1
6	4	Главный герой	1	1
6	5	Новый объект	1	1
6	6	Новый объект	1	1
6	7	Новый объект	1	1
7	2	Пример локации	2	1
7	3	Пример события	3	1
7	4	Главный герой	1	1
7	7	Антогонист	1	1
7	5	Огненный шар	4	1
7	6	Ледяное копьё	4	1
7	1	Пример персонажа	1	2
6	8	Эрвин, ГГ	1	1
8	1	Пример персонажа	1	1
8	2	Пример локации	2	1
8	3	Пример события	3	1
8	4	Все заклинания	5	1
8	5	Огненный шар	4	1
8	6	Ледяное копьё	4	1
9	2	Пример локации	2	1
9	3	Пример события	3	1
9	1	Пример персонажа	1	1
10	2	Пример локации	2	1
10	3	Пример события	3	1
10	1	Дейви Джонс	1	1
6	1	Бармалей	1	1
11	1	Пример персонажа	1	1
11	2	Пример локации	2	1
11	3	Пример события	3	1
12	1	Пример персонажа	1	1
12	2	Пример локации	2	1
12	3	Пример события	3	1
13	1	Пример персонажа	1	1
13	2	Пример локации	2	1
13	3	Пример события	3	1
14	1	Пример персонажа	1	1
14	2	Пример локации	2	1
14	3	Пример события	3	1
\.


--
-- Data for Name: objadditionalattribute; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".objadditionalattribute (id, "userId", "ObjId", number, name, value, "AttributeTypeId") FROM stdin;
1	7	4	2	Тест пометка	7	6
2	7	7	2	Связанный персонаж	7	4
3	7	2	2	Описание	Это просто пример того, что можно делать\nвот\nтак\nИ это будет правильно работать и открываться, как многострочный блок текста.	1
4	7	2	3	Назначение	тест	1
5	7	2	4	Главный персонаж	7	4
6	7	2	5	Новое поле		1
1	4	1	2		1	5
1	6	1	2	пиздит всех	пиздит всех, кого видит	1
2	6	8	2		Главный герой 	1
3	6	8	3	выхватывает пизды от	1	5
1	9	1	2	Test pole	1	5
\.


--
-- Data for Name: objattribute; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".objattribute (id, "userId", "ObjId", number, value) FROM stdin;
1	1	1	0	1
1	3	8	0	7
2	3	9	0	7
1	7	1	0	Пример персонажа, чисто для теста.
2	7	4	0	Вокруг него строится сюжет
3	7	1	1	4
4	7	1	2	2
5	7	7	0	Злодей
6	7	5	0	10
7	7	5	1	Огонь
8	7	6	0	20
9	7	6	1	Лёд
10	7	1	3	5
11	7	7	3	6
12	7	4	3	5
1	8	4	0	5
2	8	4	1	6
1	9	1	0	Шаблон
2	9	1	1	2
\.


--
-- Data for Name: objstate; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".objstate ("userId", id, code, name, description) FROM stdin;
1	1	use	Используется	Объект используется в системе.
1	2	deleted	Удалён	Объект помещён в корзину.
1	3	block	Недоступен	Объект недоступен.
2	1	use	Используется	Объект используется в системе.
2	2	deleted	Удалён	Объект помещён в корзину.
2	3	block	Недоступен	Объект недоступен.
3	1	use	Используется	Объект используется в системе.
3	2	deleted	Удалён	Объект помещён в корзину.
3	3	block	Недоступен	Объект недоступен.
4	1	use	Используется	Объект используется в системе.
4	2	deleted	Удалён	Объект помещён в корзину.
4	3	block	Недоступен	Объект недоступен.
5	1	use	Используется	Объект используется в системе.
5	2	deleted	Удалён	Объект помещён в корзину.
5	3	block	Недоступен	Объект недоступен.
6	1	use	Используется	Объект используется в системе.
6	2	deleted	Удалён	Объект помещён в корзину.
6	3	block	Недоступен	Объект недоступен.
7	1	use	Используется	Объект используется в системе.
7	2	deleted	Удалён	Объект помещён в корзину.
7	3	block	Недоступен	Объект недоступен.
8	1	use	Используется	Объект используется в системе.
8	2	deleted	Удалён	Объект помещён в корзину.
8	3	block	Недоступен	Объект недоступен.
9	1	use	Используется	Объект используется в системе.
9	2	deleted	Удалён	Объект помещён в корзину.
9	3	block	Недоступен	Объект недоступен.
10	1	use	Используется	Объект используется в системе.
10	2	deleted	Удалён	Объект помещён в корзину.
10	3	block	Недоступен	Объект недоступен.
11	1	use	Используется	Объект используется в системе.
11	2	deleted	Удалён	Объект помещён в корзину.
11	3	block	Недоступен	Объект недоступен.
12	1	use	Используется	Объект используется в системе.
12	2	deleted	Удалён	Объект помещён в корзину.
12	3	block	Недоступен	Объект недоступен.
13	1	use	Используется	Объект используется в системе.
13	2	deleted	Удалён	Объект помещён в корзину.
13	3	block	Недоступен	Объект недоступен.
14	1	use	Используется	Объект используется в системе.
14	2	deleted	Удалён	Объект помещён в корзину.
14	3	block	Недоступен	Объект недоступен.
\.


--
-- Data for Name: objtype; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".objtype ("userId", id, name, code, description) FROM stdin;
1	1	Персонаж	Character	Персонаж
1	2	Локация	Location	Локация
1	3	Событие	Event	Событие
2	1	Персонаж	Character	Персонаж
2	2	Локация	Location	Локация
2	3	Событие	Event	Событие
3	1	Персонаж	Character	Персонаж
3	2	Локация	Location	Локация
3	3	Событие	Event	Событие
4	1	Персонаж	Character	Персонаж
4	2	Локация	Location	Локация
4	3	Событие	Event	Событие
5	1	Персонаж	Character	Персонаж
5	2	Локация	Location	Локация
5	3	Событие	Event	Событие
6	1	Персонаж	Character	Персонаж
6	2	Локация	Location	Локация
6	3	Событие	Event	Событие
7	2	Локация	Location	Локация
7	3	Событие	Event	Событие
7	1	Персонаж	Character	Персонаж - это базовый тип
7	4	Заклинание	Заклинание	Заклинание
8	1	Персонаж	Character	Персонаж
8	2	Локация	Location	Локация
8	3	Событие	Event	Событие
8	4	Заклинание	Заклинание	Заклинание
8	5	Гримуар	Гримуар	Гримуар
9	2	Локация	Location	Локация
9	3	Событие	Event	Событие
9	1	Персонаж	Character	Персонаж описание типа
10	1	Персонаж	Character	Персонаж
10	2	Локация	Location	Локация
10	3	Событие	Event	Событие
11	1	Персонаж	Character	Персонаж
11	2	Локация	Location	Локация
11	3	Событие	Event	Событие
12	1	Персонаж	Character	Персонаж
12	2	Локация	Location	Локация
12	3	Событие	Event	Событие
13	1	Персонаж	Character	Персонаж
13	2	Локация	Location	Локация
13	3	Событие	Event	Событие
14	1	Персонаж	Character	Персонаж
14	2	Локация	Location	Локация
14	3	Событие	Event	Событие
\.


--
-- Data for Name: objtypeattribute; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom".objtypeattribute (id, "userId", "TypeId", number, name, "AttributeTypeId") FROM stdin;
1	1	1	0	Связанный персонаж	4
1	7	1	0	Описание персонажа	1
3	7	1	2	Локация персонажа	0
4	7	4	0	Количество урона	2
5	7	4	1	Стихия	1
6	7	1	3	Основное заклинание	5
2	7	1	1	Связанный объект	6
1	8	5	0	Заклинание 1	6
2	8	5	1	Заклинание 2	6
1	9	1	0	Описание	1
2	9	1	1	Начальная локация	6
\.


--
-- Data for Name: user; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom"."user" (id, name, email, password, description, title, role, icon, lastauth, project) FROM stdin;
1	1	6B86B273FF34FCE19D6B804EFF5A3F5747ADA4EAA22F1D49C01E52DDB7875B4B	6B86B273FF34FCE19D6B804EFF5A3F5747ADA4EAA22F1D49C01E52DDB7875B4B					2024-10-20 19:21:13.304269+03	1
2	Trev	5B75DBC4E40037DF928532EEA87250ED6443760FA0A7F47F6DB951CC343B8A73	073BDDEA241898C7FF07C912F29447DCFCF997D33836CB4BCB1681C8706D7A94					2024-10-20 21:23:50.400218+03	Первый пользователь
3	Roland	7FA621058F54A35057F4A22D846C724EF446C65A7FE2BB8DB033CCCCC14FB177	DED1FFABD5FA27B6834D5311C56B843AE32780CEA7339DBE846F242111F8F040					2024-10-20 21:58:22.776307+03	Проверка
4	2	D4735E3A265E16EEE03F59718B9B5D03019C07D8B6C51F90DA3A666EEC13AB35	D4735E3A265E16EEE03F59718B9B5D03019C07D8B6C51F90DA3A666EEC13AB35					2024-10-21 09:27:23.397677+03	2
5	user	4E07408562BEDB8B60CE05C1DECFE3AD16B72230967DE01F640B7E4729B49FCE	4E07408562BEDB8B60CE05C1DECFE3AD16B72230967DE01F640B7E4729B49FCE					2024-10-21 09:38:36.411631+03	project
6	4	4B227777D4DD1FC61C6F884F48641D02B4D121D3FD328CB08B5531FCACDABF8A	4B227777D4DD1FC61C6F884F48641D02B4D121D3FD328CB08B5531FCACDABF8A					2024-10-21 09:56:12.258525+03	4
7	user	EF2D127DE37B942BAAD06145E54B0C619A1F22327B2EBBCFBEC78F5564AFE39D	EF2D127DE37B942BAAD06145E54B0C619A1F22327B2EBBCFBEC78F5564AFE39D					2024-10-21 11:34:09.958522+03	самая лучшая книга
8	6	E7F6C011776E8DB7CD330B54174FD76F7D0216B612387A5FFCFB81E6F0919683	E7F6C011776E8DB7CD330B54174FD76F7D0216B612387A5FFCFB81E6F0919683					2024-10-21 13:00:24.534676+03	6
9	7	7902699BE42C8A8E46FBBB4501726517E86B22C56A189F7625A6DA49081B2451	7902699BE42C8A8E46FBBB4501726517E86B22C56A189F7625A6DA49081B2451					2024-10-21 13:33:41.613179+03	7
10	Фил	E6724E3B2F1EA6832037C84F600A8F52C19E3BA3E18A90010DBBA339EF56A926	FC289345B5A8D39DF1B535E597F7F618894BF0AE9949D268E78145D07873905D					2024-10-21 16:57:53.284248+03	Без название
11	10	4A44DC15364204A80FE80E9039455CC1608281820FE2B24F1E5233ADE6AF1DD5	4A44DC15364204A80FE80E9039455CC1608281820FE2B24F1E5233ADE6AF1DD5					2024-10-27 10:24:26.65316+03	10
12	99	8C1F1046219DDD216A023F792356DDF127FCE372A72EC9B4CDAC989EE5B0B455	8C1F1046219DDD216A023F792356DDF127FCE372A72EC9B4CDAC989EE5B0B455					2024-11-11 16:43:49.390361+03	99
13	shizopelmen	5518133C9609880BFFEF86B98B645F2E3FC5B94E07F6327FC9C5A06B1C71DEB3	72AB994FA2EB426C051EF59CAD617750BFE06D7CF6311285FF79C19C32AFD236					2024-11-21 17:29:15.646721+03	ArkhamVerse
14	Aser Dees	6872715C79F41FC1700EC0F6AB62DDE07D368F31A47C5C565F1B2AD9307ECA8C	FCCB6362A9A78E111197C4F93837549F6BFFC9C29661D213EEFB9D2DF6176FD7					2024-11-22 11:47:47.601275+03	Ария
\.


--
-- Data for Name: userSettings; Type: TABLE DATA; Schema: Diplom; Owner: postgres
--

COPY "Diplom"."userSettings" ("userId", code, "Value") FROM stdin;
5	GridTypeId1	{"columns":{"columnVisibilityModel":{},"orderedFields":["__check__","id","state","name","c0"],"dimensions":{"id":{"maxWidth":-1,"minWidth":50,"width":50},"state":{"maxWidth":-1,"minWidth":50,"width":120},"name":{"maxWidth":-1,"minWidth":50,"width":202.0625,"flex":0},"c0":{"maxWidth":-1,"minWidth":50,"width":150}}},"preferencePanel":{"open":false},"filter":{"filterModel":{"items":[],"logicOperator":"and","quickFilterValues":[],"quickFilterLogicOperator":"and"}},"sorting":{"sortModel":[]},"density":"standard","pagination":{"meta":{},"paginationModel":{"page":0,"pageSize":100},"rowCount":3}}
7	GridTypeId1	{"columns":{"columnVisibilityModel":{},"orderedFields":["__check__","id","state","name","c0","c1","c2"],"dimensions":{"id":{"maxWidth":-1,"minWidth":50,"width":50},"state":{"maxWidth":-1,"minWidth":50,"width":120},"name":{"maxWidth":-1,"minWidth":50,"width":150},"c0":{"maxWidth":-1,"minWidth":50,"width":316.0625,"flex":0},"c1":{"maxWidth":-1,"minWidth":50,"width":203.0625,"flex":0},"c2":{"maxWidth":-1,"minWidth":50,"width":150}}},"preferencePanel":{"open":false},"filter":{"filterModel":{"items":[],"logicOperator":"and","quickFilterValues":[],"quickFilterLogicOperator":"and"}},"sorting":{"sortModel":[]},"density":"standard","pagination":{"meta":{},"paginationModel":{"page":0,"pageSize":100},"rowCount":1}}
4	GridTypeId1	{"columns":{"columnVisibilityModel":{},"orderedFields":["__check__","id","state","name"],"dimensions":{"id":{"maxWidth":-1,"minWidth":50,"width":50,"flex":0},"state":{"maxWidth":-1,"minWidth":50,"width":120},"name":{"maxWidth":-1,"minWidth":50,"width":150}}},"preferencePanel":{"open":false},"filter":{"filterModel":{"items":[],"logicOperator":"and","quickFilterValues":[],"quickFilterLogicOperator":"and"}},"sorting":{"sortModel":[]},"density":"standard","pagination":{"meta":{},"paginationModel":{"page":0,"pageSize":100},"rowCount":1}}
\.


--
-- Name: user_id_seq; Type: SEQUENCE SET; Schema: Diplom; Owner: postgres
--

SELECT pg_catalog.setval('"Diplom".user_id_seq', 14, true);


--
-- Name: attributetype PK_attributetype; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".attributetype
    ADD CONSTRAINT "PK_attributetype" PRIMARY KEY (id, "userId");


--
-- Name: favoriteobj PK_favoriteobj; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".favoriteobj
    ADD CONSTRAINT "PK_favoriteobj" PRIMARY KEY ("ObjId", "UserId");


--
-- Name: linkobj PK_linkobj; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".linkobj
    ADD CONSTRAINT "PK_linkobj" PRIMARY KEY ("ObjParentId", "userId");


--
-- Name: menuelement PK_menuelement; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".menuelement
    ADD CONSTRAINT "PK_menuelement" PRIMARY KEY (id, "userId");


--
-- Name: obj PK_obj; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".obj
    ADD CONSTRAINT "PK_obj" PRIMARY KEY (id, "userId");


--
-- Name: objadditionalattribute PK_objadditionalattribute; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objadditionalattribute
    ADD CONSTRAINT "PK_objadditionalattribute" PRIMARY KEY (id, "userId");


--
-- Name: objattribute PK_objattribute; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objattribute
    ADD CONSTRAINT "PK_objattribute" PRIMARY KEY (id, "userId");


--
-- Name: objstate PK_objstate; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objstate
    ADD CONSTRAINT "PK_objstate" PRIMARY KEY (id, "userId");


--
-- Name: objtype PK_objtype; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objtype
    ADD CONSTRAINT "PK_objtype" PRIMARY KEY (id, "userId");


--
-- Name: objtypeattribute PK_objtypeattribute; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objtypeattribute
    ADD CONSTRAINT "PK_objtypeattribute" PRIMARY KEY (id, "userId");


--
-- Name: user PK_user; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom"."user"
    ADD CONSTRAINT "PK_user" PRIMARY KEY (id);


--
-- Name: userSettings PK_userSettings; Type: CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom"."userSettings"
    ADD CONSTRAINT "PK_userSettings" PRIMARY KEY ("userId", code);


--
-- Name: IX_attributetype_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_attributetype_userId" ON "Diplom".attributetype USING btree ("userId");


--
-- Name: IX_favoriteobj_UserId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_favoriteobj_UserId" ON "Diplom".favoriteobj USING btree ("UserId");


--
-- Name: IX_linkobj_ObjChildId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_linkobj_ObjChildId_userId" ON "Diplom".linkobj USING btree ("ObjChildId", "userId");


--
-- Name: IX_linkobj_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_linkobj_userId" ON "Diplom".linkobj USING btree ("userId");


--
-- Name: IX_menuelement_objTypeId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_menuelement_objTypeId_userId" ON "Diplom".menuelement USING btree ("objTypeId", "userId");


--
-- Name: IX_menuelement_parentMenuId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_menuelement_parentMenuId_userId" ON "Diplom".menuelement USING btree ("parentMenuId", "userId");


--
-- Name: IX_menuelement_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_menuelement_userId" ON "Diplom".menuelement USING btree ("userId");


--
-- Name: IX_obj_TypeId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_obj_TypeId_userId" ON "Diplom".obj USING btree ("TypeId", "userId");


--
-- Name: IX_obj_stateId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_obj_stateId_userId" ON "Diplom".obj USING btree ("stateId", "userId");


--
-- Name: IX_obj_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_obj_userId" ON "Diplom".obj USING btree ("userId");


--
-- Name: IX_objadditionalattribute_AttributeTypeId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objadditionalattribute_AttributeTypeId_userId" ON "Diplom".objadditionalattribute USING btree ("AttributeTypeId", "userId");


--
-- Name: IX_objadditionalattribute_ObjId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objadditionalattribute_ObjId_userId" ON "Diplom".objadditionalattribute USING btree ("ObjId", "userId");


--
-- Name: IX_objadditionalattribute_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objadditionalattribute_userId" ON "Diplom".objadditionalattribute USING btree ("userId");


--
-- Name: IX_objattribute_ObjId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objattribute_ObjId_userId" ON "Diplom".objattribute USING btree ("ObjId", "userId");


--
-- Name: IX_objattribute_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objattribute_userId" ON "Diplom".objattribute USING btree ("userId");


--
-- Name: IX_objstate_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objstate_userId" ON "Diplom".objstate USING btree ("userId");


--
-- Name: IX_objtype_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objtype_userId" ON "Diplom".objtype USING btree ("userId");


--
-- Name: IX_objtypeattribute_AttributeTypeId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objtypeattribute_AttributeTypeId_userId" ON "Diplom".objtypeattribute USING btree ("AttributeTypeId", "userId");


--
-- Name: IX_objtypeattribute_TypeId_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objtypeattribute_TypeId_userId" ON "Diplom".objtypeattribute USING btree ("TypeId", "userId");


--
-- Name: IX_objtypeattribute_userId; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_objtypeattribute_userId" ON "Diplom".objtypeattribute USING btree ("userId");


--
-- Name: IX_userSettings_userId_code; Type: INDEX; Schema: Diplom; Owner: postgres
--

CREATE INDEX "IX_userSettings_userId_code" ON "Diplom"."userSettings" USING btree ("userId", code);


--
-- Name: favoriteobj FK_favoriteobj_obj_ObjId_UserId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".favoriteobj
    ADD CONSTRAINT "FK_favoriteobj_obj_ObjId_UserId" FOREIGN KEY ("ObjId", "UserId") REFERENCES "Diplom".obj(id, "userId") ON DELETE CASCADE;


--
-- Name: favoriteobj FK_favoriteobj_user_UserId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".favoriteobj
    ADD CONSTRAINT "FK_favoriteobj_user_UserId" FOREIGN KEY ("UserId") REFERENCES "Diplom"."user"(id) ON DELETE CASCADE;


--
-- Name: linkobj FK_linkobj_obj_ObjChildId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".linkobj
    ADD CONSTRAINT "FK_linkobj_obj_ObjChildId_userId" FOREIGN KEY ("ObjChildId", "userId") REFERENCES "Diplom".obj(id, "userId") ON DELETE CASCADE;


--
-- Name: linkobj FK_linkobj_obj_ObjParentId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".linkobj
    ADD CONSTRAINT "FK_linkobj_obj_ObjParentId_userId" FOREIGN KEY ("ObjParentId", "userId") REFERENCES "Diplom".obj(id, "userId") ON DELETE CASCADE;


--
-- Name: menuelement FK_menuelement_menuelement_parentMenuId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".menuelement
    ADD CONSTRAINT "FK_menuelement_menuelement_parentMenuId_userId" FOREIGN KEY ("parentMenuId", "userId") REFERENCES "Diplom".menuelement(id, "userId");


--
-- Name: menuelement FK_menuelement_objtype_objTypeId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".menuelement
    ADD CONSTRAINT "FK_menuelement_objtype_objTypeId_userId" FOREIGN KEY ("objTypeId", "userId") REFERENCES "Diplom".objtype(id, "userId");


--
-- Name: obj FK_obj_objstate_stateId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".obj
    ADD CONSTRAINT "FK_obj_objstate_stateId_userId" FOREIGN KEY ("stateId", "userId") REFERENCES "Diplom".objstate(id, "userId") ON DELETE CASCADE;


--
-- Name: obj FK_obj_objtype_TypeId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".obj
    ADD CONSTRAINT "FK_obj_objtype_TypeId_userId" FOREIGN KEY ("TypeId", "userId") REFERENCES "Diplom".objtype(id, "userId") ON DELETE CASCADE;


--
-- Name: objadditionalattribute FK_objadditionalattribute_attributetype_AttributeTypeId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objadditionalattribute
    ADD CONSTRAINT "FK_objadditionalattribute_attributetype_AttributeTypeId_userId" FOREIGN KEY ("AttributeTypeId", "userId") REFERENCES "Diplom".attributetype(id, "userId") ON DELETE CASCADE;


--
-- Name: objadditionalattribute FK_objadditionalattribute_obj_ObjId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objadditionalattribute
    ADD CONSTRAINT "FK_objadditionalattribute_obj_ObjId_userId" FOREIGN KEY ("ObjId", "userId") REFERENCES "Diplom".obj(id, "userId") ON DELETE CASCADE;


--
-- Name: objattribute FK_objattribute_obj_ObjId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objattribute
    ADD CONSTRAINT "FK_objattribute_obj_ObjId_userId" FOREIGN KEY ("ObjId", "userId") REFERENCES "Diplom".obj(id, "userId") ON DELETE CASCADE;


--
-- Name: objtypeattribute FK_objtypeattribute_attributetype_AttributeTypeId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objtypeattribute
    ADD CONSTRAINT "FK_objtypeattribute_attributetype_AttributeTypeId_userId" FOREIGN KEY ("AttributeTypeId", "userId") REFERENCES "Diplom".attributetype(id, "userId") ON DELETE CASCADE;


--
-- Name: objtypeattribute FK_objtypeattribute_objtype_TypeId_userId; Type: FK CONSTRAINT; Schema: Diplom; Owner: postgres
--

ALTER TABLE ONLY "Diplom".objtypeattribute
    ADD CONSTRAINT "FK_objtypeattribute_objtype_TypeId_userId" FOREIGN KEY ("TypeId", "userId") REFERENCES "Diplom".objtype(id, "userId") ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

