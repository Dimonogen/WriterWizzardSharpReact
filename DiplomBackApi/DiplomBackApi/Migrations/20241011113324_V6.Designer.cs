// <auto-generated />
using System;
using DiplomBackApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiplomBackApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241011113324_V6")]
    partial class V6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Diplom")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiplomBackApi.Models.AttributeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsComplex")
                        .HasColumnType("boolean")
                        .HasColumnName("is_complex");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("RegExValidation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("validation");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("attributetype", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.FavoriteObj", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("ObjId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "ObjId");

                    b.HasIndex("ObjId");

                    b.HasIndex("UserId");

                    b.ToTable("favoriteobj", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.LinkObj", b =>
                {
                    b.Property<int>("ObjParentId")
                        .HasColumnType("integer");

                    b.Property<int>("ObjChildId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.HasKey("ObjParentId", "ObjChildId");

                    b.HasIndex("ObjChildId");

                    b.HasIndex("UserId");

                    b.ToTable("linkobj", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.MenuElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Filters")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("filters");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("ObjTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("objTypeId");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("integer")
                        .HasColumnName("parentMenuId");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("ObjTypeId");

                    b.HasIndex("ParentMenuId");

                    b.HasIndex("UserId");

                    b.ToTable("menuelement", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean")
                        .HasColumnName("isRead");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<int>("ObjId")
                        .HasColumnType("integer")
                        .HasColumnName("objId");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("ObjId");

                    b.HasIndex("UserId");

                    b.ToTable("notification", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.Obj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("stateId")
                        .HasColumnOrder(0);

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("obj", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjAdditionalAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int>("ObjId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("AttributeTypeId");

                    b.HasIndex("ObjId");

                    b.HasIndex("UserId");

                    b.ToTable("objadditionalattribute", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int>("ObjId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("ObjId");

                    b.HasIndex("UserId");

                    b.ToTable("objattribute", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("objstate", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjStateTransiton", b =>
                {
                    b.Property<int>("StateFromId")
                        .HasColumnType("integer")
                        .HasColumnName("stateFromId")
                        .HasColumnOrder(0);

                    b.Property<int>("StateToId")
                        .HasColumnType("integer")
                        .HasColumnName("stateToId")
                        .HasColumnOrder(1);

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.HasKey("StateFromId", "StateToId");

                    b.HasIndex("StateToId");

                    b.HasIndex("UserId");

                    b.ToTable("objstatetransition", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("objtype", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjTypeAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("AttributeTypeId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("objtypeattribute", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("icon");

                    b.Property<DateTime>("LastAuth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastauth");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("project");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("user", "Diplom");
                });

            modelBuilder.Entity("DiplomBackApi.Models.FavoriteObj", b =>
                {
                    b.HasOne("DiplomBackApi.Models.Obj", "Obj")
                        .WithMany()
                        .HasForeignKey("ObjId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomBackApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obj");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiplomBackApi.Models.LinkObj", b =>
                {
                    b.HasOne("DiplomBackApi.Models.Obj", "ObjChild")
                        .WithMany()
                        .HasForeignKey("ObjChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomBackApi.Models.Obj", "ObjParent")
                        .WithMany()
                        .HasForeignKey("ObjParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjChild");

                    b.Navigation("ObjParent");
                });

            modelBuilder.Entity("DiplomBackApi.Models.MenuElement", b =>
                {
                    b.HasOne("DiplomBackApi.Models.ObjType", "ObjType")
                        .WithMany()
                        .HasForeignKey("ObjTypeId");

                    b.HasOne("DiplomBackApi.Models.MenuElement", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuId");

                    b.Navigation("ObjType");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("DiplomBackApi.Models.Notification", b =>
                {
                    b.HasOne("DiplomBackApi.Models.Obj", "Obj")
                        .WithMany()
                        .HasForeignKey("ObjId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomBackApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obj");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiplomBackApi.Models.Obj", b =>
                {
                    b.HasOne("DiplomBackApi.Models.ObjState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomBackApi.Models.ObjType", "ObjType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjType");

                    b.Navigation("State");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjAdditionalAttribute", b =>
                {
                    b.HasOne("DiplomBackApi.Models.AttributeType", "AttributeType")
                        .WithMany()
                        .HasForeignKey("AttributeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomBackApi.Models.Obj", "Obj")
                        .WithMany()
                        .HasForeignKey("ObjId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeType");

                    b.Navigation("Obj");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjAttribute", b =>
                {
                    b.HasOne("DiplomBackApi.Models.Obj", "Obj")
                        .WithMany()
                        .HasForeignKey("ObjId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obj");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjStateTransiton", b =>
                {
                    b.HasOne("DiplomBackApi.Models.ObjState", "StateFrom")
                        .WithMany()
                        .HasForeignKey("StateFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomBackApi.Models.ObjState", "StateTo")
                        .WithMany()
                        .HasForeignKey("StateToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StateFrom");

                    b.Navigation("StateTo");
                });

            modelBuilder.Entity("DiplomBackApi.Models.ObjTypeAttribute", b =>
                {
                    b.HasOne("DiplomBackApi.Models.AttributeType", "AttributeType")
                        .WithMany()
                        .HasForeignKey("AttributeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomBackApi.Models.ObjType", "ObjType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeType");

                    b.Navigation("ObjType");
                });
#pragma warning restore 612, 618
        }
    }
}
